I"+<h2 id="풀이">풀이</h2>

<p>입력이 3&lt;=n&lt;=50으로 제한되어 있고, 비교적 작을 수 이므로 단순하게 하나씩 비교해 나가면 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">List</span>

<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

 <span class="c1"># 사탕의 상태를 입력 받을 배열 선언
</span><span class="n">candy</span> <span class="o">=</span> <span class="p">[</span><span class="bp">None</span><span class="p">]</span><span class="o">*</span><span class="n">n</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>

     <span class="c1"># 각 사탕의 색을 하나씩 쪼개서 List[str]형태로 저장
</span>    <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

 <span class="c1"># 사탕을 먹을 수 있을때 최댓값을 세는 함수 선언
</span><span class="k">def</span> <span class="nf">eat</span><span class="p">(</span><span class="n">candy</span><span class="p">:</span><span class="n">List</span><span class="p">[</span><span class="nb">str</span><span class="p">],</span> <span class="n">cnt</span><span class="p">:</span><span class="nb">int</span><span class="p">)</span><span class="o">-&gt;</span><span class="nb">int</span><span class="p">:</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>

        <span class="n">tmp1</span><span class="p">,</span><span class="n">tmp2</span> <span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span>

        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>
    
             <span class="c1"># 좌우로 인접한 사탕의 종류가 같다면 먹을 수 있고 
</span>             <span class="c1"># 카운트를 위해 같다면 1을 계속 더해줌
</span>            <span class="k">if</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">==</span><span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>

                <span class="n">tmp1</span><span class="o">+=</span><span class="mi">1</span>

             <span class="c1"># 만약 다른 종류가 나온다면 1로 초기화
</span>            <span class="k">else</span><span class="p">:</span>

                <span class="n">tmp1</span><span class="o">=</span><span class="mi">1</span>

             <span class="c1"># 상하로 인접한 사탕의 종류가 같다면 먹을 수 있고
</span>             <span class="c1"># 카운트를 위해 같다면 1을 계속 더해줌
</span>            <span class="k">if</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">==</span><span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]:</span>

                <span class="n">tmp2</span><span class="o">+=</span><span class="mi">1</span>

            <span class="k">else</span><span class="p">:</span>

                <span class="n">tmp2</span><span class="o">=</span><span class="mi">1</span>

             <span class="c1"># 입력받은 cnt와 tmp1,tmp2중 최대를 cnt에 저장
</span>            <span class="n">cnt</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">cnt</span><span class="p">,</span><span class="n">tmp1</span><span class="p">,</span><span class="n">tmp2</span><span class="p">)</span>
 
    <span class="k">return</span> <span class="n">cnt</span>



<span class="n">cnt</span><span class="p">,</span><span class="n">cnt1</span><span class="p">,</span><span class="n">cnt2</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>

    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">):</span>

         <span class="c1"># 좌우 종류가 다른경우 서로 바꾸고 eat함수를 호출,
</span>         <span class="c1"># eat 함수로 cnt1를 계산한뒤 다시 원래 상태로 되돌림
</span>        <span class="k">if</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">!=</span><span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]:</span>

            <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span>

            <span class="n">cnt1</span> <span class="o">=</span> <span class="n">eat</span><span class="p">(</span><span class="n">candy</span><span class="p">,</span><span class="n">cnt</span><span class="p">)</span>

            <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span>

         <span class="c1"># 상하 종류가 다른경우 서로 바꾸고 eat함수를 호출,
</span>         <span class="c1"># eat 함수로 cnt2를 계산한뒤 다시 원래 상태도 되돌림
</span>        <span class="k">if</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">!=</span><span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]:</span>

            <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span>

            <span class="n">cnt2</span> <span class="o">=</span> <span class="n">eat</span><span class="p">(</span><span class="n">candy</span><span class="p">,</span><span class="n">cnt</span><span class="p">)</span>

            <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">],</span> <span class="n">candy</span><span class="p">[</span><span class="n">j</span><span class="p">][</span><span class="n">i</span><span class="p">]</span>

        <span class="n">cnt</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="n">cnt1</span><span class="p">,</span><span class="n">cnt2</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">cnt</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
ZCY
ZCP
PYZ
[['C', 'Z', 'Y'], ['Z', 'C', 'P'], ['P', 'Y', 'Z']]
[['Z', 'Y', 'C'], ['Z', 'C', 'P'], ['P', 'Y', 'Z']]
[['Z', 'C', 'Y'], ['P', 'C', 'P'], ['Z', 'Y', 'Z']]
[['Z', 'C', 'Y'], ['C', 'Z', 'P'], ['P', 'Y', 'Z']]
[['Z', 'C', 'Y'], ['Z', 'P', 'C'], ['P', 'Y', 'Z']]
[['Z', 'C', 'Y'], ['Z', 'Y', 'P'], ['P', 'C', 'Z']]
[['Z', 'C', 'Y'], ['Z', 'C', 'P'], ['Y', 'P', 'Z']]
[['Z', 'C', 'P'], ['Z', 'C', 'Y'], ['P', 'Y', 'Z']]
[['Z', 'C', 'Y'], ['Z', 'C', 'P'], ['P', 'Z', 'Y']]
[['Z', 'C', 'Y'], ['Z', 'C', 'Z'], ['P', 'Y', 'P']]
2
</code></pre></div></div>

:ET