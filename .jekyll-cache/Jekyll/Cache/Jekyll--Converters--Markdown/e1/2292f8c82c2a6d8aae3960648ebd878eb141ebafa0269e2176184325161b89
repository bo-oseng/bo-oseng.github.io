I"9+<h1 id="백준-문제-중-14889번">백준 문제 중 14889번</h1>
<p>https://www.acmicpc.net/problem/14889</p>

<h3 id="문제">문제</h3>

<p>오늘은 스타트링크에 다니는 사람들이 모여서 축구를 해보려고 한다. 축구는 평일 오후에 하고 의무 참석도 아니다. 축구를 하기 위해 모인 사람은 총 N명이고 신기하게도 N은 짝수이다. 이제 N/2명으로 이루어진 스타트 팀과 링크 팀으로 사람들을 나눠야 한다.</p>

<p>BOJ를 운영하는 회사 답게 사람에게 번호를 1부터 N까지로 배정했고, 아래와 같은 능력치를 조사했다. 능력치 Sij는 i번 사람과 j번 사람이 같은 팀에 속했을 때, 팀에 더해지는 능력치이다. 팀의 능력치는 팀에 속한 모든 쌍의 능력치 Sij의 합이다. Sij는 Sji와 다를 수도 있으며, i번 사람과 j번 사람이 같은 팀에 속했을 때, 팀에 더해지는 능력치는 Sij와 Sji이다.</p>

<p>N=4이고, S가 아래와 같은 경우를 살펴보자.</p>

<table>
  <thead>
    <tr>
      <th>i/j</th>
      <th>1</th>
      <th>2</th>
      <th>3</th>
      <th>4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td> </td>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>2</td>
      <td>4</td>
      <td> </td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>3</td>
      <td>7</td>
      <td>1</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>4</td>
      <td>3</td>
      <td>4</td>
      <td>5</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<p>예를 들어, 1, 2번이 스타트 팀, 3, 4번이 링크 팀에 속한 경우에 두 팀의 능력치는 아래와 같다.</p>

<ul>
  <li>스타트 팀: S12 + S21 = 1 + 4 = 5</li>
  <li>
    <p>링크 팀: S34 + S43 = 2 + 5 = 7
1, 3번이 스타트 팀, 2, 4번이 링크 팀에 속하면, 두 팀의 능력치는 아래와 같다.</p>
  </li>
  <li>스타트 팀: S13 + S31 = 2 + 7 = 9</li>
  <li>링크 팀: S24 + S42 = 6 + 4 = 10
축구를 재미있게 하기 위해서 스타트 팀의 능력치와 링크 팀의 능력치의 차이를 최소로 하려고 한다. 위의 예제와 같은 경우에는 1, 4번이 스타트 팀, 2, 3번 팀이 링크 팀에 속하면 스타트 팀의 능력치는 6, 링크 팀의 능력치는 6이 되어서 차이가 0이 되고 이 값이 최소이다.</li>
</ul>

<h3 id="입력">입력</h3>

<p>첫째 줄에 N(4 ≤ N ≤ 20, N은 짝수)이 주어진다. 둘째 줄부터 N개의 줄에 S가 주어진다. 각 줄은 N개의 수로 이루어져 있고, i번 줄의 j번째 수는 Sij 이다. Sii는 항상 0이고, 나머지 Sij는 1보다 크거나 같고, 100보다 작거나 같은 정수이다.</p>

<h3 id="출력">출력</h3>

<p>첫째 줄에 스타트 팀과 링크 팀의 능력치의 차이의 최솟값을 출력한다.</p>

<hr />

<h2 id="풀이">풀이</h2>

<p>이 문제의 핵심은 팀원을 구성할 때 최적화 할 방법을 생각하는 것이다.</p>

<p>만약 4명이서 팀을 구성해야 한다면, 각각 2명 2명의 팀이 되는데 만약 [1, 2] 로 스타트팀을 구성했다면[3, 4] 가 링크팀이 된다는 것이다.  마찬가지로 [1, 4] 로 스타팀을 구성한다면 [2, 3] 이 될것이다. 여기에는 규칙이 있다.</p>

<p>규칙을 일반화 하기 위해 [1, 2, 3, 4] 중 2개 수로 조합을 구했던 <a href="https://bo-oseng.github.io/boj/boj-15650">N과 M (2)</a> 를 살펴보면 코드가 [1, 2] , [1, 3], [1, 4], [2, 3], [2, 4], [3, 4] 의 순으로 만들어 진다는 것을 알 수있고, 여기서 각각 스타트와 링크로 나누어 지는 경우는 맨 처음과 끝 [1, 2],[3, 4] 두번째와 끝에서 두번째 [1,3], [2, 4] 세번째와 끝에서 세번째 [1, 4], [2, 3]임을 알 수있다.</p>

<p>스타트와 링크팀을 구성할 수 있는 모든 경우의 조합을 생각하고, 각각의 능력치를 모두 구해서 모든 경우의 능력치를 직접 비교 하는 식으로 코드를 짰다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>
<span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

<span class="n">s</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="n">s</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">())))</span>


<span class="n">teams</span> <span class="o">=</span> <span class="p">[]</span>

<span class="n">discovered</span> <span class="o">=</span> <span class="p">[]</span>

 <span class="c1"># 1 ~ n 까지의 멤버들로 n//2 명의 팀을 구성하는 방법을 구하는 함수
</span><span class="k">def</span> <span class="nf">dfs</span><span class="p">(</span><span class="n">start</span><span class="p">:</span><span class="nb">int</span><span class="p">)</span><span class="o">-&gt;</span><span class="bp">None</span><span class="p">:</span>

    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">discovered</span><span class="p">)</span><span class="o">&gt;=</span><span class="n">n</span><span class="o">//</span><span class="mi">2</span><span class="p">:</span>
         <span class="c1"># 현재까지의 discovered를 복사해서 teams에 추가
</span>        <span class="n">teams</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">discovered</span><span class="p">[:])</span>        
        <span class="k">return</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">start</span><span class="p">,</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">i</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">discovered</span><span class="p">:</span>
            <span class="n">discovered</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
            <span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
            <span class="n">discovered</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>

<span class="n">dfs</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

 <span class="c1"># 최소값을 구하기 위한 변수를 선언하고 sys.maxsize로 초기화
</span><span class="n">min_abs</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">maxsize</span>

<span class="c1"># 팀을 구성할 수 있는 모든 조합을 스캔함
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">teams</span><span class="p">)</span><span class="o">//</span><span class="mi">2</span><span class="p">):</span>

     <span class="c1"># 스타트 팀 멤버
</span>    <span class="n">team_s</span> <span class="o">=</span> <span class="n">teams</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>

     <span class="c1"># 스타트 팀 능력치
</span>    <span class="n">stat_s</span> <span class="o">=</span> <span class="mi">0</span>
     <span class="c1"># 스타팀에 속한 멤버들의 모든 S[a][b]를 더해줌
</span>    <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">team_s</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">team_s</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">a</span><span class="o">==</span><span class="n">b</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="n">stat_s</span><span class="o">+=</span><span class="n">s</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">b</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

     <span class="c1"># 링크 팀 멤버
</span>    <span class="n">team_l</span> <span class="o">=</span> <span class="n">teams</span><span class="p">[</span><span class="o">-</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

     <span class="c1"># 링크 팀 능력치
</span>    <span class="n">stat_l</span> <span class="o">=</span> <span class="mi">0</span>
     <span class="c1"># 링크팀에 속한 멤버들의 모든 S[a][b]를 더해줌
</span>    <span class="k">for</span> <span class="n">a</span> <span class="ow">in</span> <span class="n">team_l</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">b</span> <span class="ow">in</span> <span class="n">team_l</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">a</span><span class="o">==</span><span class="n">b</span><span class="p">:</span>
                <span class="k">continue</span>
            <span class="n">stat_l</span><span class="o">+=</span><span class="n">s</span><span class="p">[</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="n">b</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
            
     <span class="c1"># 모든 팀의 경우 중 최소값만을 min_abs에 저장
</span>    <span class="n">min_abs</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="n">min_abs</span><span class="p">,</span> <span class="nb">abs</span><span class="p">(</span><span class="n">stat_s</span> <span class="o">-</span> <span class="n">stat_l</span><span class="p">))</span>

<span class="k">print</span><span class="p">(</span><span class="n">min_abs</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6
0 1 2 3 4 5
1 0 2 3 4 5
1 2 0 3 4 5
1 2 3 0 4 5
1 2 3 4 0 5
1 2 3 4 5 0
2
</code></pre></div></div>

:ET