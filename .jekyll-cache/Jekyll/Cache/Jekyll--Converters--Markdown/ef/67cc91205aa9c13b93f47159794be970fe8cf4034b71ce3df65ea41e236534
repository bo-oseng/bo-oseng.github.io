I"<h1 id="백준-문제-중-10799번">백준 문제 중 10799번</h1>
<p>https://www.acmicpc.net/problem/10799</p>

<h3 id="문제">문제</h3>

<p>여러 개의 쇠막대기를 레이저로 절단하려고 한다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자른다. 쇠막대기와 레이저의 배치는 다음 조건을 만족한다.</p>

<ul>
  <li>쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. - 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓는다.</li>
  <li>각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.</li>
  <li>레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다.</li>
</ul>

<p>아래 그림은 위 조건을 만족하는 예를 보여준다. 수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향이다.</p>

<p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/problem/10799/1.png" alt="" /></p>

<p>이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있다.</p>

<ol>
  <li>레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반드시 레이저를 표현한다.</li>
  <li>쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.</li>
</ol>

<p>위 예의 괄호 표현은 그림 위에 주어져 있다.</p>

<p>쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.</p>

<p>쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.</p>

<h3 id="입력">입력</h3>

<p>한 줄에 쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 공백없이 주어진다. 괄호 문자의 개수는 최대 100,000이다</p>

<h3 id="출력">출력</h3>

<p>잘려진 조각의 총 개수를 나타내는 정수를 한 줄에 출력한다.</p>

<hr />

<h2 id="풀이">풀이</h2>

<p>Stack 의 길이를 활용하는게 핵심이었던 문제이다. 코드의 대략적인 구성은 이렇다.</p>

<ol>
  <li>주어진 문자열을 차례로 스캔한다.</li>
  <li>’(‘ 를 만나다면 스택 stk 넣는다.</li>
  <li>’)’ 를 만나다면 이전의 문자열이 ‘(‘ 인 경우와 ‘)’ 인 경우로 나뉜다. 이전 문자가 flag=True 인경우 이전 문자가 ‘(‘ 이고 flag=False인경우 이전 문자가 ‘)’ 이다.</li>
  <li>이전 문자열이 ‘(‘ 이라면 ‘()’ 이 되면서 레이저를 완성하고 stk에 있는 ‘(‘ 의 갯수를 센다. 이때 스택에 남아 있던 ‘(‘ 의 개수는 현재의 레이저를 기준으로 왼쪽에 있던 쇠막대들의 개수고, 현재 레이저로 무조건 잘린뒤 나뉘어 지므로 ans에 ‘(‘ 개수 즉 stk의 길이를 더한다.</li>
  <li>이전 문자열이 ‘)’ 인 경우는 ‘))’이므로 쇠막대가 밑에 나와 있다는 뜻이고, 이전 레이저 위치를 기준으로 오른쪽에 있다. 잘려질 쇠막대는 1개이고 다음 ‘(‘ 가 나올때까지 그때마다 ans에 1을 더해 준다</li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sets</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>

 <span class="c1"># '(' 를 저장할 스택선언
</span><span class="n">stk</span> <span class="o">=</span> <span class="p">[]</span>
 <span class="c1"># 이전 문자열을 기억할 flag 선언, true 면 '(' false면 ')'
</span><span class="n">flag</span> <span class="o">=</span> <span class="bp">True</span>
<span class="n">ans</span><span class="o">=</span><span class="mi">0</span>

<span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span><span class="o">&lt;</span><span class="nb">len</span><span class="p">(</span><span class="n">sets</span><span class="p">):</span>

     <span class="c1"># '(' 라면 스택에 저장
</span>    <span class="k">if</span> <span class="n">sets</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">is</span> <span class="s">'('</span><span class="p">:</span>
        <span class="n">stk</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">sets</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
         <span class="c1"># 이전 문자열이 '('
</span>        <span class="n">flag</span> <span class="o">=</span> <span class="bp">True</span>

     <span class="c1"># ')'를 만날경우
</span>    <span class="k">elif</span> <span class="n">sets</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="ow">is</span> <span class="s">')'</span><span class="p">:</span>

         <span class="c1"># 이전 문자가 '('일 경우 레이저를 완성하며 
</span>         <span class="c1"># 레이저 기준 왼쪽 막대개수(len(stk)를 ans에 더함    
</span>        <span class="k">if</span> <span class="n">flag</span><span class="p">:</span>
            <span class="n">stk</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
            <span class="n">ans</span><span class="o">+=</span><span class="nb">len</span><span class="p">(</span><span class="n">stk</span><span class="p">)</span>
            <span class="n">flag</span> <span class="o">=</span> <span class="bp">False</span> 

         <span class="c1"># 이전 문자가 ')'일 경우 아래의 쇠막대가 있다는 뜻
</span>         <span class="c1"># ans에 1을 더해줌          
</span>        <span class="k">else</span><span class="p">:</span>
            <span class="n">stk</span><span class="p">.</span><span class="n">pop</span><span class="p">()</span>
            <span class="n">ans</span><span class="o">+=</span><span class="mi">1</span>            
            
    <span class="n">i</span><span class="o">+=</span><span class="mi">1</span>
<span class="k">print</span><span class="p">(</span><span class="n">ans</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(((()(()()))(())()))(()())
24
</code></pre></div></div>

:ET