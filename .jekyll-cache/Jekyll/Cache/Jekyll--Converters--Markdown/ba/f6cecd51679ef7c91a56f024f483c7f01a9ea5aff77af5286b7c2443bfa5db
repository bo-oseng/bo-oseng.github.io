I")!<h1 id="백준-문제-중-9465번">백준 문제 중 9465번</h1>
<p>https://www.acmicpc.net/problem/9465</p>

<h3 id="문제">문제</h3>

<p>상근이의 여동생 상냥이는 문방구에서 스티커 2n개를 구매했다. 스티커는 그림 (a)와 같이 2행 n열로 배치되어 있다. 상냥이는 스티커를 이용해 책상을 꾸미려고 한다.</p>

<p>상냥이가 구매한 스티커의 품질은 매우 좋지 않다. 스티커 한 장을 떼면, 그 스티커와 변을 공유하는 스티커는 모두 찢어져서 사용할 수 없게 된다. 즉, 뗀 스티커의 왼쪽, 오른쪽, 위, 아래에 있는 스티커는 사용할 수 없게 된다.</p>

<p><img src="https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/images/sticker.png" alt="스티커" /></p>

<p>모든 스티커를 붙일 수 없게된 상냥이는 각 스티커에 점수를 매기고, 점수의 합이 최대가 되게 스티커를 떼어내려고 한다. 먼저, 그림 (b)와 같이 각 스티커에 점수를 매겼다. 상냥이가 뗄 수 있는 스티커의 점수의 최댓값을 구하는 프로그램을 작성하시오. 즉, 2n개의 스티커 중에서 점수의 합이 최대가 되면서 서로 변을 공유 하지 않는 스티커 집합을 구해야 한다.</p>

<p>위의 그림의 경우에 점수가 50, 50, 100, 60인 스티커를 고르면, 점수는 260이 되고 이 것이 최대 점수이다. 가장 높은 점수를 가지는 두 스티커 (100과 70)은 변을 공유하기 때문에, 동시에 뗄 수 없다.</p>

<h3 id="입력">입력</h3>

<p>첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫째 줄에는 n (1 ≤ n ≤ 100,000)이 주어진다. 다음 두 줄에는 n개의 정수가 주어지며, 각 정수는 그 위치에 해당하는 스티커의 점수이다. 연속하는 두 정수 사이에는 빈 칸이 하나 있다. 점수는 0보다 크거나 같고, 100보다 작거나 같은 정수이다.</p>

<h3 id="출력">출력</h3>

<p>각 테스트 케이스 마다, 2n개의 스티커 중에서 두 변을 공유하지 않는 스티커 점수의 최댓값을 출력한다.</p>

<hr />

<h2 id="풀이">풀이</h2>

<p>입력받은 sticker가</p>

<p>0: [ 50 10 100 20 40 ]<br />
1: [ 30 50  70 10 60 ]</p>

<p>라 할때 현재의 스티커가 떼진다면 양옆 위아래가 훼손됨을 고려 해야한다.<br />
만약 sticker[0][0]을 뗀다면 양옆 위아래는 불가능하고 다음으로 뗄 수 있는 sticker[1][1]에 점수를 더해준다.</p>

<p>0: [ 50 10 100 20 40 ]<br />
1: [ 30 100  70 10 60 ]</p>

<p>만약 sticker[0][1]을 뗀다면 양옆 위아래는 불가능하고 다음으로 뗄 수 있는 sticker[0][1]에 점수를 더해준다.</p>

<p>0: [ 50 40 100 20 40 ]<br />
1: [ 30 100  70 10 60 ]</p>

<p>이 된다.</p>

<p>sticker[0][n], sticker[1][n]의 최대점수를 구하는 방법은 아래와 같다.</p>

<ol>
  <li>sticker[0][2]를 뗄떼 sticker[0][2] 이전의 스티커를 떼는 방법은
    <ul>
      <li>sticker[0][0] -&gt; sticker[1][1] -&gt; sticker[0][2]</li>
      <li>sticker[1][0] -&gt; sticker[0][2]</li>
    </ul>
  </li>
</ol>

<p>로 두가지이고 이중 최대점수를 구하고 이를 sticker[0][2]에 대입한다.</p>

<ol>
  <li>sticker[1][2]를 뗄떼 sticker[1][2] 이전의 스티커를 떼는 방법은
    <ul>
      <li>sticker[1][0] -&gt; sticker[0][1] -&gt; sticker[1][2]</li>
      <li>sticker[0][0] -&gt; sticker[1][2]</li>
    </ul>
  </li>
</ol>

<p>로 두가지이고 이중 최대점수를 구하고 이를 sticker[1][2]에 대입한다.<br />
위의 1, 2 과정을 1~n까지 하면 sticker[0][n], sticker[1][n]을 알 수 있고 둘중 최댓값이 답이된다.</p>

<p>이를 코드로 구현하면 아래와 같다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">T</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">T</span><span class="p">):</span>

    <span class="n">stic</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="n">n</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>

    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>

         <span class="c1"># [:n]로 n개까지만 입력
</span>        <span class="n">stic</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="nb">input</span><span class="p">().</span><span class="n">split</span><span class="p">()))[:</span><span class="n">n</span><span class="p">])</span>
    
    <span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">):</span>

         <span class="c1"># k가 1일때 스티커를 떼고 훼손 되지 않은 부분에 더해줌
</span>        <span class="k">if</span> <span class="n">k</span><span class="o">==</span><span class="mi">1</span><span class="p">:</span>

            <span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>
            <span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">+=</span> <span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>

        <span class="k">else</span><span class="p">:</span>

             <span class="c1"># 위의 1,2 과정을 코드로 구현
</span>            <span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">+=</span> <span class="nb">max</span><span class="p">(</span><span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span> <span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
            <span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">+=</span> <span class="nb">max</span><span class="p">(</span><span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span> <span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>

    <span class="k">print</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">stic</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="n">stic</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="o">-</span><span class="mi">1</span><span class="p">]))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3
5
50 10 100 20 40
30 50 70 10 60
260
7
10 30 10 50 100 20 40
20 40 30 50 60 20 80
290
6
20 5 30 9 19 0
30 9 10 0 30 14
93
</code></pre></div></div>

:ET