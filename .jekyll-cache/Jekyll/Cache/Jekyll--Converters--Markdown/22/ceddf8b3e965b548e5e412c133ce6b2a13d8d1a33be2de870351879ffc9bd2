I"b<h1 id="백준-문제-중-1541번">백준 문제 중 1541번</h1>
<p>https://www.acmicpc.net/problem/1541</p>

<h3 id="문제">문제</h3>

<p>세준이는 양수와 +, -, 그리고 괄호를 가지고 식을 만들었다. 그리고 나서 세준이는 괄호를 모두 지웠다.</p>

<p>그리고 나서 세준이는 괄호를 적절히 쳐서 이 식의 값을 최소로 만들려고 한다.</p>

<p>괄호를 적절히 쳐서 이 식의 값을 최소로 만드는 프로그램을 작성하시오.</p>

<h3 id="입력">입력</h3>

<p>첫째 줄에 식이 주어진다. 식은 ‘0’~‘9’, ‘+’, 그리고 ‘-’만으로 이루어져 있고, 가장 처음과 마지막 문자는 숫자이다. 그리고 연속해서 두 개 이상의 연산자가 나타나지 않고, 5자리보다 많이 연속되는 숫자는 없다. 수는 0으로 시작할 수 있다. 입력으로 주어지는 식의 길이는 50보다 작거나 같다.</p>

<h3 id="출력">출력</h3>

<p>첫째 줄에 정답을 출력한다.</p>

<hr />

<h2 id="풀이">풀이</h2>

<p>이 문제의 포인트는 두가지이다.</p>
<ol>
  <li>최소가 되게끔 하는 조건을 생각하는것</li>
  <li>0008, 0009같이 0으로 시작하는 수를 처리하는 것</li>
</ol>

<p>첫번째 조건은 문자열을 스캔하다가 ‘-‘가 나올때마다 -를 기준으로 left와 right항을 나누고 ‘-‘연산을 하기전에 left right를 먼저 계산 하면 right가 가능한한 최대의 값을 가질것이고 그러므로 left - right는 최소가 될것이다.</p>

<p>예를들어</p>

<p>‘10-20+30+40-20-10’ 가 주어졌을때 [10, 20+30+40, 20, 10] 으로 나누고 연산을 하면된다.</p>

<p>내가 헤맸던 부분은 두번째의 ‘0008’의 처리였다.</p>

<p>처음 시도 했을때 ‘0008’을 eval로 평가해서 대입하려고 했는데 오류가 발생했었다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># eval('50+40')
</span><span class="nb">eval</span><span class="p">(</span><span class="s">'0008'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  File "&lt;string&gt;", line 1
    0008
       ^
SyntaxError: invalid token
</code></pre></div></div>

<p>이를 해결하기 위해서 다른 접근이 필요했고, 문자열을 +를 기준으로 split하여 직접 더하는 식으로 해결했다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">numsops</span> <span class="o">=</span> <span class="nb">input</span><span class="p">()</span>

<span class="n">nums</span> <span class="o">=</span> <span class="p">[]</span>


 <span class="c1"># 임시로 문자열을 저장할 변수 선언
</span><span class="n">tmp</span> <span class="o">=</span> <span class="s">''</span>

<span class="k">for</span> <span class="n">c</span> <span class="ow">in</span> <span class="n">numsops</span><span class="p">:</span>

     <span class="c1"># '-'를 발견한다면 tmp에 담긴 문자열을 nums에 넣는다.
</span>    <span class="k">if</span> <span class="n">c</span> <span class="o">==</span> <span class="s">'-'</span><span class="p">:</span>
        <span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>
        <span class="n">tmp</span> <span class="o">=</span> <span class="s">''</span>

     <span class="c1"># '-'를 만나기 전까지 문자열을 tmp에 담는다
</span>    <span class="k">else</span><span class="p">:</span>
        <span class="n">tmp</span> <span class="o">+=</span> <span class="n">c</span>

 <span class="c1"># 마지막 수는 -를 만날수 없으므로 바로 넣는다.
</span><span class="n">nums</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">tmp</span><span class="p">)</span>


 <span class="c1"># left right들로 쪼개진 nums안의 식들을 계산
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)):</span>
    <span class="n">tmp</span> <span class="o">=</span> <span class="mi">0</span>

     <span class="c1"># 문자열을 '+' 기준으로 쪼개서 더해줌
</span>    <span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">split</span><span class="p">(</span><span class="s">'+'</span><span class="p">):</span>
        <span class="n">tmp</span><span class="o">+=</span><span class="nb">int</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
    <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">tmp</span>


 <span class="c1"># left - right 실행
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)):</span>
    <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">nums</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0080-0090
-10
</code></pre></div></div>

:ET